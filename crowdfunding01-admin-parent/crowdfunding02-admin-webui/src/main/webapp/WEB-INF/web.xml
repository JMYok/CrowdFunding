<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd"
         version="4.0">

    <context-param>
      <param-name>contextConfigLocation</param-name>
      <param-value>classpath:spring-*.xml</param-value>
    </context-param>

    <listener>
      <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>

    <!--此filter必须在所有拦截器之前-->
    <filter>
      <filter-name>characterEncodingFilter</filter-name>
      <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
      <!-- 指定字符集编码 -->
      <init-param>
        <param-name>encoding</param-name>
        <param-value>UTF-8</param-value>
      </init-param>
      <!--强制请求进行编码-->
      <init-param>
        <param-name>forceRequestEncoding</param-name>
        <param-value>true</param-value>
      </init-param>
      <!--强制响应进行编码-->
      <init-param>
        <param-name>forceResponseEncoding</param-name>
        <param-value>true</param-value>
      </init-param>
    </filter>
    <!--设置过滤器的拦截的请求的路径-->
    <filter-mapping>
      <filter-name>characterEncodingFilter</filter-name>
      <url-pattern>/*</url-pattern>
    </filter-mapping>

    <!--配置DispatcherServlet（即配置SpringMVC的前端控制器）-->
    <servlet>
      <servlet-name>dispatcherServlet</servlet-name>
      <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
      <!--指定SpringMVC配置文件-->
      <init-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>classpath:spring-web-mvc.xml</param-value>
      </init-param>

      <!--使DispatcherServlet在Web应用启动时就创建对象并初始化-->
      <!--否则按照Servlet默认，即第一次请求的时候才创建对象，则第一次请求会等很长时间-->
      <load-on-startup>1</load-on-startup>
    </servlet>
    <servlet-mapping>
      <servlet-name>dispatcherServlet</servlet-name>
      <!--根据请求的扩展名决定是否交给SpringMVC来处理-->
      <!--优点1:伪静态(SEO优化,安全性) 优点2:.js,.css,.png完全不经过SpringMVC-->
      <url-pattern>*.html</url-pattern>

      <!--若Ajax请求html,服务器返回json数据,会报406错误-->
      <url-pattern>*.json</url-pattern>
    </servlet-mapping>


    <!--加入 SpringSecurity 控制权限的 Filter-->
    <filter>
      <filter-name>springSecurityFilterChain</filter-name>
      <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
    </filter>

    <filter-mapping>
      <filter-name>springSecurityFilterChain</filter-name>
      <url-pattern>/*</url-pattern>
    </filter-mapping>

</web-app>
